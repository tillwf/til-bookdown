[["index.html", "Table of contents", " Table of contents Data Engineering Machine Learning "],["data-engineering.html", "1 Data Engineering", " 1 Data Engineering "],["filter-in-join-vs-filter-in-where.html", "1.1 Filter in JOIN vs filter in WHERE", " 1.1 Filter in JOIN vs filter in WHERE Init tables library(DBI) db = dbConnect(RSQLite::SQLite(), dbname = &quot;db.sqlite&quot;) CREATE TABLE users AS SELECT 1 AS user_id, DATETIME(&quot;2023-01-01&quot;) AS created_at UNION ALL SELECT 2 AS user_id, DATETIME(&quot;2023-01-02&quot;) AS created_at UNION ALL SELECT 3 AS user_id, DATETIME(&quot;2023-01-03&quot;) AS created_at; CREATE TABLE trackers AS SELECT 1 AS user_id, 1 AS trackable_id, DATETIME(&quot;2023-01-04&quot;) AS created_at UNION ALL SELECT 2 AS user_id, 1 AS trackable_id, DATETIME(&quot;2023-01-02&quot;) AS created_at UNION ALL SELECT 2 AS user_id, 1 AS trackable_id, DATETIME(&quot;2023-01-02&quot;) AS created_at; SELECT * FROM users; Table 1.1: 3 records user_id created_at 1 2023-01-01 00:00:00 2 2023-01-02 00:00:00 3 2023-01-03 00:00:00 SELECT * FROM trackers; Table 1.2: 3 records user_id trackable_id created_at 1 1 2023-01-04 00:00:00 2 1 2023-01-02 00:00:00 2 1 2023-01-02 00:00:00 Simple JOIN SELECT * FROM users u LEFT JOIN trackers t ON u.user_id = t.user_id Table 1.3: 4 records user_id created_at user_id trackable_id created_at 1 2023-01-01 00:00:00 1 1 2023-01-04 00:00:00 2 2023-01-02 00:00:00 2 1 2023-01-02 00:00:00 2 2023-01-02 00:00:00 2 1 2023-01-02 00:00:00 3 2023-01-03 00:00:00 NA NA NA Filter in the WHERE clause SELECT * FROM users u LEFT JOIN trackers t ON u.user_id = t.user_id WHERE DATE(t.created_at) &gt;= DATE(&quot;2023-01-05&quot;, &quot;-10 DAY&quot;) Table 1.4: 3 records user_id created_at user_id trackable_id created_at 1 2023-01-01 00:00:00 1 1 2023-01-04 00:00:00 2 2023-01-02 00:00:00 2 1 2023-01-02 00:00:00 2 2023-01-02 00:00:00 2 1 2023-01-02 00:00:00 You lose the user_id=3 Filter in the JOIN clause SELECT * FROM users u LEFT JOIN trackers t ON u.user_id = t.user_id AND DATE(t.created_at) &gt;= DATE(&quot;2023-01-05&quot;, &quot;-10 DAY&quot;) Table 1.5: 4 records user_id created_at user_id trackable_id created_at 1 2023-01-01 00:00:00 1 1 2023-01-04 00:00:00 2 2023-01-02 00:00:00 2 1 2023-01-02 00:00:00 2 2023-01-02 00:00:00 2 1 2023-01-02 00:00:00 3 2023-01-03 00:00:00 NA NA NA Adding more filters in the JOIN clause SELECT * FROM users u LEFT JOIN trackers t ON u.user_id = t.user_id AND DATE(t.created_at) &gt;= DATE(&quot;2023-01-05&quot;, &quot;-10 DAY&quot;) AND t.created_at BETWEEN DATETIME(u.created_at, &quot;+ 24 HOUR&quot;) AND DATETIME(u.created_at, &quot;+ 48 HOUR&quot;) Table 1.6: 3 records user_id created_at user_id trackable_id created_at 1 2023-01-01 00:00:00 NA NA NA 2 2023-01-02 00:00:00 NA NA NA 3 2023-01-03 00:00:00 NA NA NA Then you can make an accurate count SELECT u.user_id, CAST(COUNT(DISTINCT t.trackable_id) &gt; 0 AS INT) AS has_action FROM users u LEFT JOIN trackers t ON u.user_id = t.user_id AND DATE(t.created_at) &gt;= DATE(&quot;2023-01-05&quot;, &quot;-10 DAY&quot;) AND t.created_at BETWEEN DATETIME(u.created_at, &quot;+ 24 HOUR&quot;) AND DATETIME(u.created_at, &quot;+ 48 HOUR&quot;) GROUP BY u.user_id Table 1.7: 3 records user_id has_action 1 0 2 0 3 0 If we filter on the users in the JOIN clause SELECT u.user_id, CAST(COUNT(DISTINCT t.trackable_id) &gt; 0 AS INT) AS has_action FROM users u LEFT JOIN trackers t ON u.user_id = t.user_id AND DATE(t.created_at) &gt;= DATE(&quot;2023-01-05&quot;, &quot;-10 DAY&quot;) AND t.created_at BETWEEN DATETIME(u.created_at, &quot;+ 24 HOUR&quot;) AND DATETIME(u.created_at, &quot;+ 48 HOUR&quot;) AND u.user_id = 3 GROUP BY u.user_id Table 1.8: 3 records user_id has_action 1 0 2 0 3 0 If we filter on the users in the WHERE clause SELECT u.user_id, CAST(COUNT(DISTINCT t.trackable_id) &gt; 0 AS INT) AS has_action FROM users u LEFT JOIN trackers t ON u.user_id = t.user_id AND DATE(t.created_at) &gt;= DATE(&quot;2023-01-05&quot;, &quot;-10 DAY&quot;) AND t.created_at BETWEEN DATETIME(u.created_at, &quot;+ 24 HOUR&quot;) AND DATETIME(u.created_at, &quot;+ 48 HOUR&quot;) WHERE u.created_at &gt;= &quot;2023-01-03&quot; GROUP BY u.user_id Table 1.9: 1 records user_id has_action 3 0 "],["machine-learning.html", "2 Machine Learning", " 2 Machine Learning "],["ab-testing.html", "2.1 A/B Testing", " 2.1 A/B Testing "],["xgboost.html", "2.2 XGBoost", " 2.2 XGBoost "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
